"""Added acoustic features fields to Song model

Revision ID: 38f8d56212d8
Revises: d89d112cf01f
Create Date: 2024-11-11 21:04:11.042352

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '38f8d56212d8'
down_revision: Union[str, None] = 'd89d112cf01f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('playlist_songs')
    op.drop_index('ix_playlists_id', table_name='playlists')
    op.drop_index('ix_playlists_title', table_name='playlists')
    op.drop_table('playlists')
    op.drop_index('ix_songs_id', table_name='songs')
    op.drop_index('ix_songs_title', table_name='songs')
    op.drop_table('songs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('songs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('songs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('artist', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('album', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tempo', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('normalized_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='songs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_songs_title', 'songs', ['title'], unique=False)
    op.create_index('ix_songs_id', 'songs', ['id'], unique=False)
    op.create_table('playlists',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('playlists_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='playlists_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_playlists_title', 'playlists', ['title'], unique=False)
    op.create_index('ix_playlists_id', 'playlists', ['id'], unique=False)
    op.create_table('playlist_songs',
    sa.Column('playlist_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('song_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], name='playlist_songs_playlist_id_fkey'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], name='playlist_songs_song_id_fkey'),
    sa.PrimaryKeyConstraint('playlist_id', 'song_id', name='playlist_songs_pkey')
    )
    # ### end Alembic commands ###
